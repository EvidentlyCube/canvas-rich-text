var e,t,n=Object.defineProperty,a=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable,i=(e,t,a)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,l=(e,t)=>{for(var n in t||(t={}))o.call(t,n)&&i(e,n,t[n]);if(a)for(var n of a(t))r.call(t,n)&&i(e,n,t[n]);return e};(t=e||(e={}))[t.Text=0]="Text",t[t.Newline=1]="Newline";const s=new Set(["normal","italic"]),c=new Set(["100","200","300","400","500","600","700","800","900","normal","bold","lighter","bolder"]),u=new Set(["normal","small-caps"]),d=new Set(["ultra-condensed","extra-condensed","condensed","semi-condensed","normal","semi-expanded","expanded","extra-expanded","ultra-expanded"]);function p(e,t){t.font=`${e.fontStyle} ${e.fontVariant} ${e.fontWeight} ${e.fontStretch} ${e.fontSize} ${e.fontFamily}`,t.textBaseline="alphabetic",t.fillStyle=e.color}function g(e,t,n){const a=(e=>e.reduce(((e,t)=>Math.max(e,t.metrics.actualBoundingBoxAscent)),0))(t),o=(e=>e.reduce(((e,t)=>Math.max(e,t.metrics.actualBoundingBoxDescent)),0))(t);let r=0;const i=t.map((t=>{const o=r+(r>0?n.spaceWidth:0);return r=o+t.metrics.width,{token:t,x:o,y:e+a}}));return{width:r,height:e+o+a,words:i}}const h={color:"black",fontSize:"14px",fontStyle:"normal",fontVariant:"normal",fontWeight:"normal",fontStretch:"normal",fontFamily:"arial, sans-serif"};function m(t,n){const a=l({wordWrapWidth:Number.MAX_SAFE_INTEGER,lineSpacing:4,spaceWidth:4},n),o=function(t,n){const a=[];let o=[],r=0;for(const i of t){if(i.type===e.Newline){a.push(o),o=[];continue}const t=i.metrics.width;0===o.length?(o.push(i),r=i.metrics.width):r+n.spaceWidth+t>n.wordWrapWidth?(a.push(o),o=[],o.push(i),r=t):(o.push(i),r+=n.spaceWidth+t)}return a.push(o),a}(t,a),r=[];let i=0;for(const e of o){const t=g(i,e,a);i=t.height+a.lineSpacing,r.push(t)}return{lines:r,width:r.reduce(((e,t)=>Math.max(e,t.width)),0),height:r.reduce(((e,t)=>Math.max(e,t.height)),0)-a.lineSpacing}}function f(e,t,n=0,a=0){for(const o of e.words)p(o.token.style,t),t.fillText(o.token.text,o.x+n,o.y+a)}const y=/(<.+?>|\s+|[^<\s]+)/g,b=/<(\/?[a-zA-Z0-9]+)(.*?)>/,v=/(\S+)="(.+?)"/g;function w(e,t){let n;t.lastIndex=-1;const a=[];for(;n=t.exec(e);)a.push(n);return a}const S=/^[+]?[0-9]+(?:[.][0-9]+)?(?:px)?$/,k=/[^0-9.]/g,x=new Set(["aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred ","indigo ","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen"]);function A(e){if("undefined"!=typeof Option){const t=(new Option).style;return t.color=e,""!==t.color}return z.callback()}const z={callback:()=>!1};function E(e,t,n){switch(e){case"color":if(x.has(t.toLowerCase()))return t;if("#"===t.charAt(0))return A(t)?t:void(null==n||n(e,t,`'${t}' is not a valid hex color`));switch(t.substr(0,4).toLowerCase()){case"rgb(":return A(t)?t:void(null==n||n(e,t,`'${t}' is not a valid RGB color`));case"hsl(":return A(t)?t:void(null==n||n(e,t,`'${t}' is not a valid HSL color`));case"rgba":return A(t)?t:void(null==n||n(e,t,`'${t}' is not a valid RGBA color`));case"hsla":return A(t)?t:void(null==n||n(e,t,`'${t}' is not a valid HSLA color`))}return void(null==n||n(e,t,`'${t}' is not a valid color name`));case"fontSize":if(!S.test(t))return void(null==n||n(e,t,"'invalid' is not a valid value for fontSize"));const a=parseFloat(t.replace(k,""));return a<=0?void(null==n||n(e,t,"fontSize must be larger than 0")):`${a}px`;case"fontFamily":return 0===t.length?void(null==n||n(e,t,"fontFamily cannot be empty")):t;case"fontStyle":return s.has(t.toLowerCase())?t:void(null==n||n(e,t,`'${t}' is not a valid fontStyle value`));case"fontWeight":return c.has(t.toLowerCase())?t:void(null==n||n(e,t,`'${t}' is not a valid fontWeight value`));case"fontVariant":return u.has(t.toLowerCase())?t:void(null==n||n(e,t,`'${t}' is not a valid fontVariant value`));case"fontStretch":return d.has(t.toLowerCase())?t:void(null==n||n(e,t,`'${t}' is not a valid fontStretch value`))}}function q(e,t){const n={};for(const a in e){if(!e.hasOwnProperty(a))continue;const o=a.toLowerCase();if(t.hasOwnProperty(o)){const r=t[o],i=E(r,e[a]);void 0!==i&&(n[r]=i)}}return n}const T="undefined"!=typeof document?document.createElement("canvas"):void 0,C=null==T?void 0:T.getContext("2d");function O(e,t){return C?(p(t,C),console.log(e),C.measureText(e)):{}}const $=new Map([["amp",38],["lt",60],["gt",62],["Entity Name",67],["Agrave",192],["Aacute",193],["Acirc",194],["Atilde",195],["Auml",196],["Aring",197],["AElig",198],["Ccedil",199],["Egrave",200],["Eacute",201],["Ecirc",202],["Euml",203],["Igrave",204],["Iacute",205],["Icirc",206],["Iuml",207],["ETH",208],["Ntilde",209],["Ograve",210],["Oacute",211],["Ocirc",212],["Otilde",213],["Ouml",214],["Oslash",216],["Ugrave",217],["Uacute",218],["Ucirc",219],["Uuml",220],["Yacute",221],["THORN",222],["szlig",223],["agrave",224],["aacute",225],["acirc",226],["atilde",227],["auml",228],["aring",229],["aelig",230],["ccedil",231],["egrave",232],["eacute",233],["ecirc",234],["euml",235],["igrave",236],["iacute",237],["icirc",238],["iuml",239],["eth",240],["ntilde",241],["ograve",242],["oacute",243],["ocirc",244],["otilde",245],["ouml",246],["oslash",248],["ugrave",249],["uacute",250],["ucirc",251],["uuml",252],["yacute",253],["thorn",254],["yuml",255],["Entity Name",83],["nbsp",160],["iexcl",161],["cent",162],["pound",163],["curren",164],["yen",165],["brvbar",166],["sect",167],["uml",168],["copy",169],["ordf",170],["laquo",171],["not",172],["shy",173],["reg",174],["macr",175],["deg",176],["plusmn",177],["sup2",178],["sup3",179],["acute",180],["micro",181],["para",182],["cedil",184],["sup1",185],["ordm",186],["raquo",187],["frac14",188],["frac12",189],["frac34",190],["iquest",191],["times",215],["divide",247],["Entity Name",83],["forall",8704],["part",8706],["exist",8707],["empty",8709],["nabla",8711],["isin",8712],["notin",8713],["ni",8715],["prod",8719],["sum",8721],["minus",8722],["lowast",8727],["radic",8730],["prop",8733],["infin",8734],["ang",8736],["and",8743],["or",8744],["cap",8745],["cup",8746],["int",8747],["there4",8756],["sim",8764],["cong",8773],["asymp",8776],["ne",8800],["equiv",8801],["le",8804],["ge",8805],["sub",8834],["sup",8835],["nsub",8836],["sube",8838],["supe",8839],["oplus",8853],["otimes",8855],["perp",8869],["sdot",8901],["Entity Name",76],["Alpha",913],["Beta",914],["Gamma",915],["Delta",916],["Epsilon",917],["Zeta",918],["Eta",919],["Theta",920],["Iota",921],["Kappa",922],["Lambda",923],["Mu",924],["Nu",925],["Xi",926],["Omicron",927],["Pi",928],["Rho",929],["Sigma",931],["Tau",932],["Upsilon",933],["Phi",934],["Chi",935],["Psi",936],["Omega",937],["alpha",945],["beta",946],["gamma",947],["delta",948],["epsilon",949],["zeta",950],["eta",951],["theta",952],["iota",953],["kappa",954],["lambda",955],["mu",956],["nu",957],["xi",958],["omicron",959],["pi",960],["rho",961],["sigmaf",962],["sigma",963],["tau",964],["upsilon",965],["phi",966],["chi",967],["psi",968],["omega",969],["thetasym",977],["upsih",978],["piv",982],["Entity Name",83],["OElig",338],["oelig",339],["Scaron",352],["scaron",353],["Yuml",376],["fnof",402],["circ",710],["tilde",732],["ensp",8194],["emsp",8195],["thinsp",8201],["zwnj",8204],["zwj",8205],["lrm",8206],["rlm",8207],["ndash",8211],["mdash",8212],["lsquo",8216],["rsquo",8217],["sbquo",8218],["ldquo",8220],["rdquo",8221],["bdquo",8222],["dagger",8224],["Dagger",8225],["bull",8226],["hellip",8230],["permil",8240],["prime",8242],["Prime",8243],["lsaquo",8249],["rsaquo",8250],["oline",8254],["euro",8364],["trade",8482],["larr",8592],["uarr",8593],["rarr",8594],["darr",8595],["harr",8596],["crarr",8629],["lceil",8968],["rceil",8969],["lfloor",8970],["rfloor",8971],["loz",9674],["spades",9824],["clubs",9827],["hearts",9829],["diams",9830]]),L=/&([^#].+?|#\d+);/g;const W={createOptions:()=>({blockTags:["p","div","br"],tagDefaultStyles:{b:{fontWeight:"bold"},strong:{fontWeight:"bold"},i:{fontStyle:"italic"},em:{fontStyle:"italic"}},defaultStyles:h,attributeToStyleMap:{fontsize:"fontSize",size:"fontSize",fontstyle:"fontStyle",style:"fontStyle",fontweight:"fontWeight",weight:"fontWeight",fontvariant:"fontVariant",variant:"fontVariant",fontfamily:"fontFamily",family:"fontFamily",fontstretch:"fontStretch",stretch:"fontStretch",color:"color"}}),tokenizeString(t,n){var a;n=null!=n?n:W.createOptions();const o=[],r=[];let i={tag:"body",style:l({},n.defaultStyles)};for(const s of function(e){return w(e,y).map((e=>e[0])).filter((e=>e.trim().length>0)).reduce(((e,t)=>{if("<"===t.charAt(0)){const n=t.match(b);if(!n)return e;const[,a,o]=n;if("/"===a.charAt(0))return e.push({tag:a.toLowerCase()}),e;const r=Array.from(w(o,v)).reduce(((e,t)=>(e[t[1]]=t[2],e)),{});return e.push({tag:a.toLowerCase(),style:r}),"/"===t.charAt(t.length-2)&&e.push({tag:`/${a.toLowerCase()}`}),e}return e.push({text:t}),e}),[])}(t))if(void 0!==s.text){const t=l({},i.style),n=s.text.replace(L,((e,t)=>{const n=$.get(t.toLowerCase());return n?String.fromCharCode(n):"#"===t.charAt(0)?String.fromCharCode(parseInt(t.substr(1))):`&${t};`}));o.push({type:e.Text,text:n,metrics:O(n,t),style:t})}else if(void 0!==s.style&&void 0!==s.tag){const e=null!=(a=n.tagDefaultStyles[s.tag])?a:{};r.push(i),i={tag:s.tag,style:l(l(l({},i.style),e),q(s.style,n.attributeToStyleMap))}}else-1!==n.blockTags.indexOf(i.tag)&&o.push({type:e.Newline}),r.length>0&&(i=r.pop());return o}},F=document.getElementsByTagName("canvas")[0],N=F.getContext("2d"),I=document.getElementsByTagName("textarea")[0];function B(e){return Array.from(document.querySelectorAll(`input[name="${e}"], #${e}`)).map((e=>"checkbox"===e.type||"radio"===e.type?e.checked?e.value:void 0:e.value)).filter((e=>void 0!==e)).join(" ")}function M(){N.fillStyle="#DDF8F8",N.fillRect(0,0,F.width,F.height),h.color=B("color"),h.fontSize=B("font-size")+"px",h.fontStyle=B("font-style"),h.fontWeight=B("font-weight"),h.fontStretch=B("font-stretch"),h.fontFamily=B("font-family"),h.fontVariant=B("font-variant");const e=parseInt(B("wrap-width")),t=parseInt(B("draw-x")),n=parseInt(B("draw-y")),a=m(W.tokenizeString(I.value),{wordWrapWidth:e,spaceWidth:parseInt(B("space-width")),lineSpacing:parseInt(B("line-spacing"))});N.clearRect(0,0,500,500),N.beginPath(),N.strokeStyle="#FF0000",N.setLineDash([5,5]),N.moveTo(e+t,n),N.lineTo(e+t,n+a.height),N.stroke(),N.beginPath(),N.strokeStyle="#0000FF",N.setLineDash([3,3]),N.moveTo(t,n),N.lineTo(t+a.width,n),N.lineTo(t+a.width,n+a.height),N.lineTo(t,n+a.height),N.lineTo(t,n),N.stroke(),console.log(a),function(e,t,n=0,a=0){for(const o of e.lines)f(o,t,n,a)}(a,N,t,n)}I.value='Hello!<br/>\n<p>\n\t<b>&lt;b&gt;strong&lt;/b&gt;</b>\n\t<strong>&lt;strong&gt;strong&lt;/strong&gt;</strong>\n</p>\n<p>\n\t<i>&lt;i&gt;italic&lt;/i&gt;</i>\n\t<em>&lt;em&gt;italic&lt;/em&gt;</em>\n</p>\n<p size="30px">\n\tStarts\n\t<span size="25px">big</span>\n\t<span size="20px">but</span>\n\t<span size="15px">gets</span>\n\t<span size="10px">smaller</span>\n</p>\n<p>\n\tColors:\n\t<span color="rgb(0, 50, 50)">RGB</span>\n\t<span color="rgba(0, 50, 50, 0.3)">RGBA</span>\n\t<span color="hsl(0, 50%, 50%)">HSL</span>\n\t<span color="hsla(0, 50%, 50%, 0.3)">HSLA</span>\n\t<span color="#F0F">Hex Short</span>\n\t<span color="#00FF88">Hex Long</span>\n\t<span color="aquamarine">Named</span>\n</p>\n<p>\n\t<span family="arial">Arial</span>\n\t<span family="verdana">Verdana</span>\n\t<span family="serif">Serif</span>\n\t<span family="Comic Sans MS">Comic Sans MS</span>\n\t<span family="courier">Courier</span>\n\t<span family="webdings">qwe</span>\n\t<span family="fantasy">cursive</span>\n</p>\n<p variant="small-caps">Very small caps</p>\n',Array.from(document.getElementsByTagName("input")).forEach((e=>{e.addEventListener("input",(()=>M()))})),I.addEventListener("input",(()=>M())),M();
